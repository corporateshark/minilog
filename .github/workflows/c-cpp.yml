name: C/C++ CI

on:
  push:
    branches: [ "**" ]
  pull_request:
    branches: [ "**" ]

jobs:
  cmake-build:
      strategy:
        fail-fast: false
        matrix:
          config:
          - {
              name: "Windows - MSVC 2022",
              os: windows-latest,
              build_type: "Debug",
              cc: "cl",
              cxx: "cl",
              generators: "Visual Studio 17 2022",
            }
          - {
              name: "Ubuntu - Clang",
              os: ubuntu-latest,
              build_type: "Debug",
              cc: "clang",
              cxx: "clang++",
              generators: "Unix Makefiles",
            }
          - {
              name: "Ubuntu - GCC",
              os: ubuntu-latest,
              build_type: "Debug",
              cc: "gcc",
              cxx: "g++",
              generators: "Unix Makefiles"
            }
      runs-on: ${{ matrix.config.os }}

      steps:
        - uses: actions/checkout@v3
          with:
            submodules: recursive

        - name: Build
          shell: bash
          env:
            CC:  ${{ matrix.config.cc }}
            CXX: ${{ matrix.config.cxx }}
          run: |
            cmake ${{ env.CMAKE_GENERATOR }} -S "${{ github.workspace }}" -B build ${{ matrix.config.cmake_args }}
            cd build
            cmake --build .
  
  cmake-build-macos:
      strategy:
        fail-fast: false
        matrix:
          config:
          - {
              name: "macOS - Clang (Xcode)",
              os: macos-latest,
              build_type: "Debug",
              cc: "clang",
              cxx: "clang++",
              generators: "Xcode",
            }
      runs-on: ${{ matrix.config.os }}

      steps:
        - uses: actions/checkout@v3
          with:
            submodules: recursive

        - name: Build
          shell: bash
          env:
            CC:  ${{ matrix.config.cc }}
            CXX: ${{ matrix.config.cxx }}
          run: |
            cmake ${{ env.CMAKE_GENERATOR }} -S "${{ github.workspace }}" -B build ${{ matrix.config.cmake_args }}
            cd build
            cmake --build .
